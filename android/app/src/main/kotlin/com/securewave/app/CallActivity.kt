package com.securewave.app

import android.app.KeyguardManager
import android.content.Context
import android.content.Intent
import android.os.Build
import android.os.Bundle
import android.util.Log
import android.view.WindowManager
import android.widget.Button
import android.widget.ImageView
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class CallActivity : AppCompatActivity() {
    private val TAG = "CallActivity"
    
    private lateinit var callerNameView: TextView
    private lateinit var callTypeView: TextView
    private lateinit var callerAvatarView: ImageView
    private lateinit var acceptButton: Button
    private lateinit var declineButton: Button
    
    private var callId: String? = null
    private var callerName: String? = null
    private var callType: String? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        Log.d(TAG, "========================================")
        Log.d(TAG, "üìû CallActivity onCreate")
        Log.d(TAG, "========================================")
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Intent
        callId = intent.getStringExtra("callId")
        callerName = intent.getStringExtra("callerName") ?: "Unknown"
        callType = intent.getStringExtra("callType") ?: "audio"
        
        Log.d(TAG, "Call ID: $callId")
        Log.d(TAG, "Caller Name: $callerName")
        Log.d(TAG, "Call Type: $callType")
        Log.d(TAG, "========================================")
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º layout
        setContentView(R.layout.activity_call)
        
        // ============================================
        // –ù–ê–°–¢–†–û–ô–ö–ê –û–ö–ù–ê –î–õ–Ø –ü–û–ö–ê–ó–ê –ü–û–í–ï–†–• LOCKSCREEN
        // ============================================
        
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
            // Android 8.1+
            setShowWhenLocked(true)
            setTurnScreenOn(true)
            val keyguardManager = getSystemService(Context.KEYGUARD_SERVICE) as KeyguardManager
            keyguardManager.requestDismissKeyguard(this, null)
        } else {
            // Android 8.0 –∏ –Ω–∏–∂–µ
            window.addFlags(
                WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED or
                WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD or
                WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON
            )
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏ –¥–ª—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        window.addFlags(
            WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON or
            WindowManager.LayoutParams.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON
        )
        
        Log.d(TAG, "‚úÖ Window flags —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        callerNameView = findViewById(R.id.callerName)
        callTypeView = findViewById(R.id.callType)
        callerAvatarView = findViewById(R.id.callerAvatar)
        acceptButton = findViewById(R.id.acceptButton)
        declineButton = findViewById(R.id.declineButton)
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        callerNameView.text = callerName
        callTypeView.text = if (callType == "video") "üìπ –í–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫" else "üìû –ê—É–¥–∏–æ–∑–≤–æ–Ω–æ–∫"
        
        // TODO: –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–≤–∞—Ç–∞—Ä caller'–∞
        // callerAvatarView.setImageURI(...)
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        acceptButton.setOnClickListener {
            Log.d(TAG, "========================================")
            Log.d(TAG, "‚úÖ –ö–Ω–æ–ø–∫–∞ ACCEPT –Ω–∞–∂–∞—Ç–∞")
            Log.d(TAG, "========================================")
            acceptCall()
        }
        
        declineButton.setOnClickListener {
            Log.d(TAG, "========================================")
            Log.d(TAG, "‚ùå –ö–Ω–æ–ø–∫–∞ DECLINE –Ω–∞–∂–∞—Ç–∞")
            Log.d(TAG, "========================================")
            declineCall()
        }
        
        Log.d(TAG, "‚úÖ CallActivity –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        Log.d(TAG, "========================================")
    }
    
    /**
     * –ü—Ä–∏–Ω—è—Ç—å –∑–≤–æ–Ω–æ–∫
     */
    private fun acceptCall() {
        Log.d(TAG, "üìû –ü—Ä–∏–Ω–∏–º–∞–µ–º –∑–≤–æ–Ω–æ–∫: $callId")
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º CallActivity
        finish()
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º MainActivity —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–≤–æ–Ω–∫–∞
        // Flutter –æ—Ç–∫—Ä–æ–µ—Ç CallScreen –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        val intent = Intent(this, MainActivity::class.java).apply {
            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TOP
            putExtra("type", "incoming_call")
            putExtra("callId", callId)
            putExtra("callerName", callerName)
            putExtra("callType", callType)
            putExtra("action", "accept")
        }
        
        startActivity(intent)
        
        Log.d(TAG, "‚úÖ MainActivity –∑–∞–ø—É—â–µ–Ω–∞ —Å action=accept")
    }
    
    /**
     * –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–≤–æ–Ω–æ–∫
     */
    private fun declineCall() {
        Log.d(TAG, "‚ùå –û—Ç–∫–ª–æ–Ω—è–µ–º –∑–≤–æ–Ω–æ–∫: $callId")
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º MainActivity —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
        val intent = Intent(this, MainActivity::class.java).apply {
            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TOP
            putExtra("type", "incoming_call")
            putExtra("callId", callId)
            putExtra("callerName", callerName)
            putExtra("callType", callType)
            putExtra("action", "decline")
        }
        
        startActivity(intent)
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º CallActivity
        finish()
        
        Log.d(TAG, "‚úÖ MainActivity –∑–∞–ø—É—â–µ–Ω–∞ —Å action=decline")
    }
    
    override fun onDestroy() {
        super.onDestroy()
        Log.d(TAG, "========================================")
        Log.d(TAG, "CallActivity onDestroy")
        Log.d(TAG, "========================================")
    }
}