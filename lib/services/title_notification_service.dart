// lib/services/title_notification_service.dart

import 'dart:async';
import 'dart:html' as html;
import 'package:flutter/foundation.dart';

class TitleNotificationService {
  static final TitleNotificationService instance = TitleNotificationService._();
  TitleNotificationService._();

  Timer? _blinkTimer;
  int _unreadCount = 0;
  String _originalTitle = 'SecureWave';
  bool _isBlinking = false;
  bool _showingNotification = false;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
  void initialize() {
    if (kIsWeb) {
      _originalTitle = html.document.title ?? 'SecureWave';
      print(
          '[TitleNotification] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: $_originalTitle');
    }
  }

  /// –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∏ –Ω–∞—á–∞—Ç—å –º–∏–≥–∞–Ω–∏–µ
  void incrementUnread({String? message}) {
    if (!kIsWeb) return;

    _unreadCount++;
    _updateTitle();
    _startBlinking(message);

    print('[TitleNotification] –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: $_unreadCount');
  }

  /// –£–º–µ–Ω—å—à–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
  void decrementUnread() {
    if (!kIsWeb || _unreadCount <= 0) return;

    _unreadCount--;
    _updateTitle();

    if (_unreadCount == 0) {
      _stopBlinking();
    }

    print('[TitleNotification] –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: $_unreadCount');
  }

  /// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
  void setUnreadCount(int count) {
    if (!kIsWeb) return;

    _unreadCount = count;
    _updateTitle();

    if (_unreadCount > 0) {
      _startBlinking();
    } else {
      _stopBlinking();
    }

    print('[TitleNotification] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: $_unreadCount');
  }

  /// –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ (–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
  void clearUnread() {
    if (!kIsWeb) return;

    _unreadCount = 0;
    _stopBlinking();
    _updateTitle();

    print('[TitleNotification] –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—á–∏—Ç–∞–Ω—ã');
  }

  /// –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  void _updateTitle() {
    if (!kIsWeb) return;

    if (_unreadCount > 0) {
      html.document.title = '($_unreadCount) $_originalTitle';
    } else {
      html.document.title = _originalTitle;
    }
  }

  /// –ù–∞—á–∞—Ç—å –º–∏–≥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
  void _startBlinking([String? message]) {
    if (!kIsWeb || _isBlinking) return;

    _isBlinking = true;
    final notificationText = message ?? '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!';

    _blinkTimer?.cancel();
    _blinkTimer = Timer.periodic(Duration(seconds: 2), (timer) {
      if (!kIsWeb) {
        timer.cancel();
        return;
      }

      _showingNotification = !_showingNotification;

      if (_showingNotification) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        html.document.title = 'üîî $notificationText';
      } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        if (_unreadCount > 0) {
          html.document.title = '($_unreadCount) $_originalTitle';
        } else {
          html.document.title = _originalTitle;
        }
      }
    });

    print('[TitleNotification] –ú–∏–≥–∞–Ω–∏–µ –Ω–∞—á–∞—Ç–æ');
  }

  /// –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–≥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
  void _stopBlinking() {
    if (!kIsWeb) return;

    _isBlinking = false;
    _showingNotification = false;
    _blinkTimer?.cancel();
    _blinkTimer = null;

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    if (_unreadCount > 0) {
      html.document.title = '($_unreadCount) $_originalTitle';
    } else {
      html.document.title = _originalTitle;
    }

    print('[TitleNotification] –ú–∏–≥–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  }

  /// –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)
  void showTemporaryNotification(String text,
      {Duration duration = const Duration(seconds: 5)}) {
    if (!kIsWeb) return;

    final wasBlinking = _isBlinking;

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–∏–≥–∞–Ω–∏–µ
    _stopBlinking();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    html.document.title = 'üîî $text';

    // –ß–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    Timer(duration, () {
      if (wasBlinking && _unreadCount > 0) {
        _startBlinking();
      } else {
        _updateTitle();
      }
    });
  }

  /// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  void dispose() {
    _blinkTimer?.cancel();
    if (kIsWeb) {
      html.document.title = _originalTitle;
    }
  }

  /// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫
  int get unreadCount => _unreadCount;

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–∏–≥–∞–Ω–∏—è
  bool get isBlinking => _isBlinking;
}
